theme_minimal()
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme_minimal()
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme_minimal(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme_minimal(panel.background = element_rect(fill = "#BFD5E3", colour = "#6D9EC1",
size = 2, linetype = "solid"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "#BFD5E3", colour = "#6D9EC1", size = 2, linetype = "solid"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black", colour = "#6D9EC1", size = 2, linetype = "solid"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
movies_table_title = as.data.frame(movies_table_title)[1:50]
movies_table_title = sort(table(netflix$Title), decreasing = TRUE)
movies_table_title = as.data.frame(movies_table_title)[1:50]
movies_table_title = as.data.frame(movies_table_title)[1:50,]
set.seed(42)
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
movies_table_title = sort(table(netflix$Title), decreasing = TRUE)
movies_table_title = as.data.frame(movies_table_title)[1:250,]
set.seed(42)
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
scale_size_area(max_size = 20)+
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
scale_size_area(max_size = 100)+
theme(panel.background = element_rect(fill = "black"))
movies_table_title = sort(table(netflix$Title), decreasing = TRUE)
movies_table_title = as.data.frame(movies_table_title)[1:150,]
set.seed(42)
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
scale_size_area(max_size = 100)+
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
scale_size_area(max_size = 100)+
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
set.seed(42)
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"), ,
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
+
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
+geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
descarga1
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask3.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "white"))
black
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = 45)) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
360*rand
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = c(45,60,180,90))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
sample.vec(c(45,60,90,120,180), 150, replace = TRUE)
sample(c(45,60,90,120,180), 150, replace = TRUE)
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/ne2t.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net2.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/descarga1.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net3.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net4.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net4.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "darkred", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net4.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "white", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net2.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "white", high = "red") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net2.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "firebrick1") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,180), 150, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net2.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
movies_table_title = sort(table(netflix$Title), decreasing = TRUE)
movies_table_title = as.data.frame(movies_table_title)[1:250,]
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120, 145,180), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net2.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,180), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net1.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,180), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net3.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,180), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,0), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,0, 30), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,0,15,30), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,0,15,30), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/net2.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
movies_table = table(netflix$MovieID)
#Ordenamos las MovieID en función del número de calificaciones y de forma descendente:
orden = sort(movies_table, decreasing = TRUE)
#Pedimos que nos imprima las 5 primeras observaciones, para obtener asi las 5 películas más votadas:
head(orden, 5)
#Una vez sabemos el MovieID de las películas más votadas las filtramos:
mas_votadas = filter(netflix, MovieID == names(orden[1:5]))
mas_votadas
names(orden[1:5])
#Una vez sabemos el MovieID de las películas más votadas las filtramos:
mas_votadas = filter(netflix, MovieID = names(orden[1:5]))
#Una vez sabemos el MovieID de las películas más votadas las filtramos:
mas_votadas = filter(netflix, MovieID == names(orden[1:5]))
View(mas_votadas)
mas_votadas = as.data.frame(mas_votadas)
table(mas_votadas$MovieID)
wordcloudplot = ggplot(movies_table_title, aes(label = Var1, size = Freq, color = Freq, angle = sample(c(45,60,90,120,145,0,15,30), 250, replace = TRUE))) +
geom_text_wordcloud_area(mask = png::readPNG("imgs/netflix-mask2.png"),
rm_outside = TRUE) +
scale_color_gradient(low = "indianred1", high = "red2") +
theme(panel.background = element_rect(fill = "black"))
ggplotly(wordcloudplot)
#Representamos
boxplot = ggplot(mas_votadas,aes(Title, Rating, group=MovieID))+
geom_boxplot(fill = "darkseagreen1", colour = "black", outlier.colour = "darkgreen")+
geom_point(stat= "summary", shape=20, size=2, color="red")
ggplotly(boxplot)
#Representamos
boxplot = ggplot(mas_votadas,aes(Title, Rating, group=MovieID))+
geom_boxplot(color = MovieID)+
geom_point(stat= "summary", shape=20, size=2, color="red")
#Representamos
boxplot = ggplot(mas_votadas,aes(Title, Rating, group=MovieID))+
geom_boxplot(color = Title)+
geom_point(stat= "summary", shape=20, size=2, color="red")
ggplotly(boxplot, color = Title)
#Representamos
boxplot = ggplot(mas_votadas, aes(Title, Rating, group=MovieID))+
geom_boxplot()+
geom_point(stat= "summary", shape=20, size=2, color="red")
ggplotly(boxplot, color = Title)
ggplotly(boxplot, color = ~Title)
#Representamos
boxplot = ggplot(mas_votadas,aes(Title, Rating, group=MovieID))+
geom_boxplot(fill = "darkseagreen1", colour = Title, outlier.colour = "darkgreen")+
geom_point(stat= "summary", shape=20, size=2, color="red")
ggplotly(boxplot)
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
names(orden[1:10])
ggplot(tabla, aes(x = Var2, y = Freq))+
geom_line()
View(tabla)
ggplot(tabla, aes(x = Var2, y = Freq, group = Var1))+
geom_line()
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, table$Var1 == names(orden[1:10]))
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, table$Var1 == names(orden[1:10]))
names(orden[1:10])
a = names(orden[1:10])
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
ggplot(tabla, aes(x = Var2, y = Freq, group = Var1))+
geom_line()
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
tabla = table(netflix$MovieID, netflix$Year)
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 == names(orden[1:10]))
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
count(table$Var1)
min(netflix$Year)
table(netflix$Year)
names(orden[1:10])
#Investiga la distribución de valoraciones por día de la semana y por mes.¿Qué meses y días de la semana se valoran más películas en netflix?
```
## Las 10 películas más votadas
```{r}
#Tabla agrupada por película y año del número de valoraciones.
tabla = table(netflix$MovieID, netflix$Year)
tabla = as.data.frame(tabla)
tabla = filter(tabla, Var1 %in% names(orden[1:10]))
ggplot(tabla, aes(x = Var2, y = Freq, group = Var1))+
geom_line()
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Year)
```
tabla2 = table(netflix$MovieID, netflix$Year)
tabla2
tabla
table2
tabla2
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
```
tabla2
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
tabla2 = as.data.frame(tabla2)
```
View(tabla2)
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
a = filter (netflix, MovieID %in% names(orden[1:10]))
```
View(a)
b = aggregate(a[,5], list(a$MovieID), mean)
```
View(b)
b = aggregate(a[,5], a$MovieID, mean)
```
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
a = filter (netflix, MovieID %in% names(orden[1:10]))
b = aggregate(a[,5], a$MovieID, mean)
```
View(b)
b = aggregate(a[,5], a$Title, mean)
```
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
a = filter (netflix, MovieID %in% names(orden[1:10]))
b = aggregate(a[,5], a$Title, mean)
```
b = aggregate(a[,5], list(a$Title), mean)
```
View(b)
ex1 = a %>%
group_by(Year) %>%
aggregate(a[,5], list(a$Title), mean)
```{r}
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
a = filter (netflix, MovieID %in% names(orden[1:10]))
ex1 = a %>%
group_by(Year) %>%
aggregate(a[,5], list(a$Title), mean)
ex1 = group_by(a,Year)
View(ex1)
a = group_by(a,Year)
b = aggregate(a[,5], list(a$Title), mean)
```
```{r}
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
a = filter (netflix, MovieID %in% names(orden[1:10]))
a = group_by(a,Year)
b = aggregate(a[,5], list(a$Title), mean)
```
group_by(a,Year)
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
#Distribución del score promedio por año.
tabla2 = table(netflix$MovieID, netflix$Rating)
a = filter (netflix, MovieID %in% names(orden[1:10]))
a = group_by(a,Year)
b = aggregate(a[,5], list(a$Title), mean)
res =  a %>%
group_by(MovieID, Year) %>%
summarise(mean = mean(Rating))
View(res)
res =  a %>%
group_by(MovieID, Year) %>%
summarise(mean = mean(Rating))
